/* https://leetcode.com/problems/maximum-depth-of-binary-tree/
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


int maxDepth(struct TreeNode* root){
    int left_dep;
    int right_dep;
    
    if (root == NULL) return 0;
    
    left_dep = maxDepth(root->left);
    right_dep = maxDepth(root->right);
    
    if (left_dep >= right_dep) 
        return left_dep + 1;
    
    return right_dep + 1;
}
